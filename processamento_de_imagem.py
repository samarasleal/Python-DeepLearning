# -*- coding: utf-8 -*-
"""Processamento de Imagem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rrNJmZGfZbBmo_nJAHNTfeVKiWVy6JTG

Exercício 01: Ler uma imagem hospedada na Internet e exibi-la no projeto. (0,30 ponto)

> Bloco com recuo

> Bloco com recuo
"""

# Ler a imagem
import cv2
from skimage import io
from google.colab.patches import cv2_imshow
def ler_imagem(nome_arquivo):    
     imagem = io.imread(nome_arquivo)
     cv2_imshow(imagem)
     return imagem
path = 'https://img.freepik.com/fotos-gratis/garota-feliz-com-capuz-cinza-brinca-com-corgi-no-fundo-rosa-cachorro-lambe-bochecha-de-mulher-feliz-senhora-de-otimo-humor-segurando-animal-domestico-isolado_197531-18535.jpg'      
img = ler_imagem(path)

"""Exercício 02: Exibir informações sobre a imagem, tais como Altura, Largura e Quantidade de Canais. (0,30 ponto)

[texto do link](https://)
"""

h, w, c = img.shape
print('Largura:  ', w)
print('Altura: ', h)
print('Canais:', c)

"""Exercício 03: Redimensionar a imagem para uma resolução de 200 X 200 pixels. (0,30 ponto)


"""

largura = int(img.shape[1] * 200 / 100)
altura = int(img.shape[0] * 200 / 100)
dim = (largura, altura)  
img_redimensionada = cv2.resize(img, dim, interpolation = cv2.INTER_AREA)
cv2_imshow(img_redimensionada)

"""Exercício 04: Aplicar um filtro Gaussiano na imagem do exercício 03 e exibir o resultado. (0,30 ponto)


"""

gauss = cv2.GaussianBlur(img,(5,5),cv2.BORDER_DEFAULT)
cv2_imshow(gauss)

"""Exercício 05: Aplicar uma limiarização na imagem do exercício 03 e exibir o resultado. (0,30 ponto)


"""

import numpy as np  
      
img2 = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) 
   
thresh = cv2.adaptiveThreshold(img2, 255, cv2.ADAPTIVE_THRESH_MEAN_C, 
                                          cv2.THRESH_BINARY, 199, 5)   
cv2_imshow(thresh)